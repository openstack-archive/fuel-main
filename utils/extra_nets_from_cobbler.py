from collections import defaultdict
import yaml
import re
import sys


# This nets autogenerated by puppet according to networking settings
# of admin network. We will ignore them.
ignored_nets = ['6', 'internal']
nets = defaultdict(dict)

for line in sys.stdin:
    if re.match('[^#]*=[^#*]', line):
        item = re.split('(=|#)', line)
        name = re.split(',', item[2].strip())[0]
        value = re.split(',', item[2].strip())[1:]
        if item[0] in ['dhcp-option', 'dhcp-boot']:
            try:
                name = re.split(':', name)[1]
            except:
                continue
            if name in ignored_nets:
                continue
        if item[0] == 'dhcp-range':
            if name in ignored_nets:
                continue
            nets[name].update({'dhcp_pool_start': value[0]})
            nets[name].update({'dhcp_pool_end': value[1]})
            nets[name].update({'netmask': value[2]})
        if item[0] == 'dhcp-option':
            nets[name].update({'dhcp_gateway': value[1]})
        if item[0] == 'dhcp-boot':
            nets[name].update({'ipaddress': value[2]})

###write networks from dnsmasq to astute
astute = yaml.load(open('/etc/fuel/astute.yaml'))
astute['cobbler']['networks'] = {}
for net in nets:
    astute['cobbler']['networks'][net] = nets[net]

print yaml.dump(astute, default_flow_style=False)
