LISTEN_ADDRESS: "0.0.0.0"
LISTEN_PORT: "8000"
DEVELOPMENT: 1

COMMIT_SHA: "Unknown build"
FUEL_COMMIT_SHA: "Unknown build"
PRODUCT_VERSION: "3.0"

FIXTURES_TO_UPLOAD:
  - "openstack.json"
  - "redhat.json"
  - "start_notification.json"
  - "admin_network.json"

DATABASE:
  engine: "postgresql"
  name: "nailgun"
  host: "localhost"
  port: "5432"
  user: "nailgun"
  passwd: "nailgun"

# Check timeouts for offline-online nodes detection
KEEPALIVE:
  interval: 30  # How often to check if node went offline. If node powered on, it is immediately switched to online state.
  timeout: 180  # Node will be switched to offline if there are no updates from agent for this period of time

STATIC_DIR: "/var/tmp/nailgun_static"
TEMPLATE_DIR: "/var/tmp/nailgun_static"
NETWORK_POOLS:
  public:
    - "172.16.0.0/12"
  private10:
    - "10.0.0.0/8"
  private192:
    - "192.168.0.0/16"

NET_EXCLUDE:
  - "10.20.0.0/24"

ADMIN_NETWORK:
  cidr: "10.20.0.0/24"
  netmask: "255.255.255.0"
  size: "256"
  first: "10.20.0.129"
  last: "10.20.0.254"

VLANS_RANGE_START: "100"
VLANS_RANGE_END: "1000"

RABBITMQ:
  fake: "0"
  hostname: "127.0.0.1"

APP_LOG: &nailgun_log "/var/log/nailgun/app.log"
API_LOG: &api_log "/var/log/nailgun/api.log"
SYSLOG_DIR: &remote_syslog_dir "/var/log/remote/"

PATH_TO_SSH_KEY: = "/root/.ssh/id_rsa"
PATH_TO_BOOTSTRAP_SSH_KEY: "/root/.ssh/bootstrap.rsa"

MASTER_IP: "127.0.0.1"

COBBLER_URL: "http://localhost/cobbler_api"
COBBLER_USER: "cobbler"
COBBLER_PASSWORD: "cobbler"

NOVA_STATE_PATH: "/var/lib/nova"

TRUNCATE_LOG_ENTRIES: 100
UI_LOG_DATE_FORMAT: '%Y-%m-%d %H:%M:%S'
LOG_FORMATS:
  - &remote_syslog_log_format
    regexp: '^(?P<date>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2})(?P<secfrac>\.\d{1,})?(?P<timezone>(Z|[+-]\d{2}:\d{2}))?\s(?P<level>[a-z]{3,7}):\s(?P<text>.*)$'
    date_format: '%Y-%m-%dT%H:%M:%S'
    levels:
      - DEBUG
      - INFO
      - NOTICE
      - WARNING
      - ERR
      - CRIT
      - ALERT
      - EMERG
  - &python_log_format
    regexp: '^(?P<date>\d{4}-\d{2}-\d{2}\s\d{2}:\d{2}:\d{2})\s(?P<level>[A-Z]+)\s(?P<text>.*)$'
    date_format: '%Y-%m-%d %H:%M:%S'
    levels:
      - DEBUG
      - INFO
      - WARNING
      - ERROR
      - CRITICAL

LOG_TYPES:
  - &local_log_type
    remote: False
    multiline: True
  - &remote_log_type
    remote: True
    multiline: True
    base: *remote_syslog_dir

LOG_GROUPS:
  - &main_install_log_group
    group: ~
  - &install_log_group
    group: 'Other install logs'
  - &bootstrap_log_group
    group: 'Bootstrap logs'

LOGS:
# Master node logs.
  - id: app
    name: "Web backend"
    <<: *local_log_type
    <<: *python_log_format
    path: *nailgun_log
  - id: api
    name: "REST API"
    <<: *local_log_type
    <<: *python_log_format
    path: *api_log
  - id: naily
    name: "Orchestrator"
    <<: *local_log_type
    <<: *remote_syslog_log_format
    path: '/var/log/naily/naily.log'
  - id: puppet
    name: "Releases"
    <<: *local_log_type
    <<: *remote_syslog_log_format
    path: "/var/log/puppet/agent.log"
# Fake target logs.
  - id: 'fake-target-mcollective'
    name: "mcollective"
    <<: *remote_log_type
    <<: *remote_syslog_log_format
    <<: *main_install_log_group
    fake: True
    path: '/var/tmp/fake-target-mcollective.log'
# Target node installation logs.
  - id: 'install/puppet'
    name: "puppet"
    <<: *remote_log_type
    <<: *remote_syslog_log_format
    <<: *main_install_log_group
    path: 'puppet-agent.log'
  - id: 'install/anaconda'
    name: "anaconda"
    <<: *remote_log_type
    <<: *remote_syslog_log_format
    <<: *main_install_log_group
    path: 'install/anaconda.log'
  - id: 'install/syslog'
    name: "syslog"
    <<: *remote_log_type
    <<: *remote_syslog_log_format
    <<: *main_install_log_group
    path: 'install/syslog.log'
  - id: 'install/storage'
    name: "storage"
    <<: *remote_log_type
    <<: *remote_syslog_log_format
    <<: *install_log_group
    path: 'install/storage.log'
  - id: 'install/ks-pre'
    name: "kickstart-pre"
    <<: *remote_log_type
    <<: *remote_syslog_log_format
    <<: *install_log_group
    path: 'install/ks-pre.log'
  - id: 'install/ks-post'
    name: "kickstart-post"
    <<: *remote_log_type
    <<: *remote_syslog_log_format
    <<: *install_log_group
    path: 'install/ks-post.log'
# Bootstrap node logs.
  - id: 'bootstrap/dmesg'
    name: "dmesg"
    <<: *remote_log_type
    <<: *remote_syslog_log_format
    <<: *bootstrap_log_group
    path: 'bootstrap/dmesg.log'
  - id: 'bootstrap/secure'
    name: "secure"
    <<: *remote_log_type
    <<: *remote_syslog_log_format
    <<: *bootstrap_log_group
    path: 'bootstrap/secure.log'
  - id: 'bootstrap/messages'
    name: "messages"
    <<: *remote_log_type
    <<: *remote_syslog_log_format
    <<: *bootstrap_log_group
    path: 'bootstrap/messages.log'
  - id: 'bootstrap/mco'
    name: "mcollective"
    <<: *remote_log_type
    <<: *remote_syslog_log_format
    <<: *bootstrap_log_group
    path: 'bootstrap/mcollective.log'
  - id: 'bootstrap/agent'
    name: "agent"
    <<: *remote_log_type
    <<: *remote_syslog_log_format
    <<: *bootstrap_log_group
    path: 'bootstrap/agent.log'

LOGS_TO_PACK_FOR_SUPPORT:
  logs: '/var/log'

MCO_PSKEY: "Gie6iega9ohngaenahthohngu8aebohxah9seidi"
MCO_VHOST: "mcollective"
MCO_HOST: "localhost"
MCO_USER: "guest"
MCO_PASSWORD: "guest"
MCO_CONNECTOR: "rabbitmq"

PUPPET_MASTER_HOST: "localhost"
PUPPET_VERSION: "2.7.19"

DNS_DOMAIN: "example.com"
DNS_SERVERS: "127.0.0.1"
DNS_SEARCH: "example.com"

FAKE_TASKS_TICK_INTERVAL: "1"
FAKE_TASKS_TICK_COUNT: "30"

RHEL_VALIDATION_TIMEOUT: 10

MAX_ITEMS_PER_PAGE: 500
